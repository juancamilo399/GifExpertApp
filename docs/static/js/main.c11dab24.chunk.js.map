{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","split","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAAiB,EAENC,mBAAS,QAFH,mBAEnCC,EAFmC,KAEvBC,EAFuB,KAqB1C,OACI,mCACG,sBAAMC,SAdQ,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAY,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACjCN,EAAc,MASf,SACK,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAvBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,qBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAIDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXtB,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,EAAMO,MAAM,MAAM,SCArBC,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECHZ,SAACA,GAAa,IAAD,EACVd,mBAAS,CAC/BqB,KAAK,GACLc,SAAS,IAHuB,mBAC7BC,EAD6B,KACtBC,EADsB,KAoBpC,OAdAC,qBAAU,WACNzB,EAAQC,GACHyB,MAAK,SAACjB,GAGCe,EAAS,CACLhB,KAAKC,EACLa,SAAS,SAK3B,CAACrB,IAEIsB,EDfeI,CAAa1B,GAA5BO,EAF4B,EAE5BA,KAAKc,EAFuB,EAEvBA,QAGZ,OACA,qCACI,6BAAKrB,IAEJqB,GAAS,mBAAGL,UAAU,mCAAb,uBAEV,qBAAKA,UAAU,YAAf,SAEOT,EAAKE,KAAI,SAAAkB,GAAG,OACT,cAAC,EAAD,eAEOA,GADAA,EAAIhB,aEjBhBiB,EAAe,WAAO,IAAD,EAGC1C,mBAAS,CAAC,SAHX,mBAGxBc,EAHwB,KAGdf,EAHc,KAO9B,OACE,qCACE,8CAEA,cAAC,EAAD,CAAaA,YAAaA,IAG1B,uBAEA,6BAEQe,EAASS,KAAI,SAAAoB,GAAU,OAClB,cAAC,EAAD,CAEA7B,SAAU6B,GADLA,Y,MChB1BC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.c11dab24.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n\r\n    const [inputValue, setinputValue] = useState('hola')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value)\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (inputValue.trim().length>2){\r\n            setCategory(cats=>[inputValue,...cats])\r\n            setinputValue('')\r\n\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type='text'\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n           \r\n            \r\n        </>\r\n    )\r\n\r\n    \r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=6EPDyRsSqOnG76O0HcMWs0j4DFkfrkCS&q=${encodeURI(category) }&limit=5`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    \r\n\r\n    const gifs = data.map(gif =>{\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images.downsized_medium.url\r\n\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n   \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title} />\r\n            <p>{title.split(\"by\")[0]}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data,loading}= useFetchGifs(category);\r\n\r\n\r\n    return (\r\n    <>\r\n        <h3>{category}</h3>\r\n        \r\n        {loading&&<p className='animate__animated animate__flash'>Loading..</p>}\r\n        \r\n        <div className=\"card-grid\">\r\n         \r\n              {data.map(img=>(\r\n                  <GifGridItem\r\n                    key={img.id}\r\n                    {... img}\r\n                   />\r\n              ))}\r\n         \r\n            \r\n              </div>\r\n    </>\r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs =(category) =>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then((gifs) => {\r\n\r\n               \r\n                    setstate({\r\n                        data:gifs,\r\n                        loading: false,\r\n                    })\r\n\r\n            })\r\n\r\n    },[category])\r\n\r\n    return state;\r\n}","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n   \r\n   const [category, setCategory] = useState(['cats']);\r\n\r\n\r\n\r\n    return (\r\n      <>\r\n        <h2>GifExpertApp</h2>\r\n\r\n        <AddCategory setCategory={setCategory} />\r\n\r\n\r\n        <hr />\r\n        \r\n        <ol>\r\n            {\r\n                category.map(categories =>(\r\n                     <GifGrid \r\n                     key={categories}\r\n                     category={categories}\r\n                     />\r\n                ))\r\n            }\r\n        </ol>\r\n      </>\r\n  \r\n    )\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css'\n\n\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  \n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}